version: '3.6'
services:
  postgres:
    image: postgres:12
    container_name: "postgres"
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgrespassword
    networks:
      static-network:
        ipv4_address: 172.30.10.21
  hasura-graphql:
    image: hasura/graphql-engine:v1.3.3
    container_name: "hasura"
    ports:
      - "8080:8080"
    depends_on:
      - "postgres"
      - "dotnet-graphql"
    restart: always
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/skeleton
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
    networks:
      static-network:
        ipv4_address: 172.30.10.10
  dotnet-graphql:
    image: acroquelois/skeleton-graphql-dotnet
    container_name: "graphql-skeleton-api"
    depends_on:
      - "postgres"
    environment: 
      PGDB_CONNECTION: "Host=172.30.10.21;Username=postgres;Password=postgrespassword;Database=skeleton"
    ports:
      - '5000:5000'
    networks:
      static-network:
        ipv4_address: 172.30.10.11
volumes:
  db_data:
networks:
  static-network:
    ipam:
      config:
        - subnet: 172.30.10.0/24